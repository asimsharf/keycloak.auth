
server.port=5000
spring.main.banner-mode=off
spring.application.name=keycloak.auth
spring.application.jar=keycloak.auth-0.0.1-SNAPSHOT.jar

spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
spring.jackson.time-zone=UTC


# spring.datasource.url=jdbc:mysql://mysql-db:3306/keycloakdb
spring.datasource.url=jdbc:mysql://localhost:3306/keycloakdb
spring.datasource.username=keycloak
spring.datasource.password=password
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.initialization-mode=always

# Hibernate Settings
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

# Hibernate Dialect for MySQL
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
spring.jpa.hibernate.ddl-auto=update

# Show SQL queries (optional)
spring.jpa.show-sql=true

# Keycloak Settings
keycloak.auth-server-url=http://localhost:8181/realms/spring-microservices-security-realm
keycloak.realm=spring-microservices-security-realm
keycloak.resource=spring-client-credentials-id
keycloak.credentials.secret=9mtG5y9zpsEu9GZ6jDFWOvin74AGVbCC
keycloak.public-client=true

# Spring Security OAuth2 Client
spring.security.oauth2.client.registration.keycloak.client-id=spring-client-credentials-id
spring.security.oauth2.client.registration.keycloak.client-secret=9mtG5y9zpsEu9GZ6jDFWOvin74AGVbCC
spring.security.oauth2.client.registration.keycloak.scope=openid
spring.security.oauth2.client.provider.keycloak.token-uri=http://localhost:8181/realms/spring-microservices-security-realm/protocol/openid-connect/token
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8181/realms/spring-microservices-security-realm
spring.security.oauth2.client.provider.keycloak.authorization-uri=http://keycloak-server:8080/realms/spring-microservices-security-realm/protocol/openid-connect/token
spring.security.oauth2.client.provider.keycloak.jwk-set-uri=http://keycloak-server:8080/realms/spring-microservices-security-realm/protocol/openid-connect/certs

# Always return JSON responses, even for errors
server.error.include-message=always
server.error.include-binding-errors=always
spring.mvc.throw-exception-if-no-handler-found=true
spring.web.resources.add-mappings=false

# Log full stack traces for better debugging
logging.level.org.springframework=ERROR
logging.level.org.springframework.web=DEBUG
logging.level.com.sudagoarth=DEBUG

# Hibernate Settings
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.security.oauth2=DEBUG
logging.level.org.springframework.security.oauth2.client=DEBUG
logging.level.org.springframework.security.oauth2.client.authentication=DEBUG
logging.level.org.springframework.security.oauth2.client.endpoint=DEBUG
logging.level.org.springframework.security.oauth2.client.http=DEBUG
logging.level.org.springframework.security.oauth2.client.registration=DEBUG
logging.level.org.springframework.security.oauth2.client.web=DEBUG
logging.level.org.springframework.security.oauth2.config=DEBUG
logging.level.org.springframework.security.oauth2.core=DEBUG
logging.level.org.springframework.security.oauth2.jwt=DEBUG
logging.level.org.springframework.security.oauth2.jwt.JwtDecoder=DEBUG
logging.level.org.springframework.security.oauth2.jwt.JwtValidators=DEBUG
logging.level.org.springframework.security.oauth2.jwt.NimbusJwtDecoder=DEBUG
logging.level.org.springframework.security.oauth2.jwt.NimbusJwtDecoderJwkSupport=DEBUG
logging.level.org.springframework.security.oauth2.jwt.NimbusJwtDecoderJwkSupport.NimbusJwtDecoderJwkSupport=DEBUG



# JWK URI
keycloak.jwk-uri=http://localhost:8181/realms/spring-microservices-security-realm/protocol/openid-connect/certs

# OAuth2 Client Settings for Keycloak
keycloak.client-id=spring-client-credentials-id
keycloak.client-secret=9mtG5y9zpsEu9GZ6jDFWOvin74AGVbCC
keycloak.scope=openid

# OAuth2 Token URI
keycloak.token-uri=http://localhost:8181/realms/spring-microservices-security-realm/protocol/openid-connect/token

# OAuth2 Resource Server JWT settings
keycloak.jwt-issuer-uri=http://localhost:8181/realms/spring-microservices-security-realm

# Authorization URI (you may use this if using authorization code flow)
keycloak.auth-uri=http://keycloak-server:8080/realms/spring-microservices-security-realm/protocol/openid-connect/auth

# JWK Set URI for the authorization server
keycloak.jwk-set-uri=http://keycloak-server:8080/realms/spring-microservices-security-realm/protocol/openid-connect/certs
